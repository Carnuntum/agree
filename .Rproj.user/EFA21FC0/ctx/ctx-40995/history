runApp('appJosef_new.R')
runApp('appJosef_new.R')
h5
tags$h5
runApp('appJosef_new.R')
runApp('appJosef_new.R')
titlePanel
runApp('appJosef_new.R')
runApp('appJosef_new.R')
titlePanel
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
source('C:/Users/Aureus/Google Drive/1_Psychologie Master/2. Masterarbeit/1_Working Directory/src_chi.R', echo=TRUE)
runApp('appJosef_new.R')
runApp('appJosef_new.R')
source('C:/Users/Aureus/Google Drive/1_Psychologie Master/2. Masterarbeit/1_Working Directory/src_chi.R', echo=TRUE)
rm(list = ls())
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
m <- rbind(c(273,10218),c(266,14081))
chisq.test(m)
chisq.test(m, correct = F)
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
m
library(kableExtra)
kable(m)
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
table(m)
kable(m)
runApp('appJosef_new.R')
m
row.names(m)
row.names(m) <- c('one', 'two')
m
colnames(m) <- c('one', 'two')
m
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
table(x = 3, y = 3, z = 4, w = 4)
table(3,3,3,3)
table(c(3,3,3,3))
a <- letters[1:3]
table(a, sample(a))
a
data.frame(x = c(3,4), y = c(6,7))
data.frame(athletes = c(273,266),
students = c(10218,14081),
row.names = c('male','female'))
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
chiTableExp
write.csv(chiTableExp, file = 'chiExp')
write.csv(chiTableExp, file = 'chiExp.csv')
read.csv('chiExp.csv')
chisq.test( read.csv('chiExp.csv'))
as.data.frame(read.csv('chiExp.csv'))
d <- as.data.frame(read.csv('chiExp.csv'))
d
View(d)
chisq.test(d)
chiTableExp
View(chiTableExp)
write_csv(chiTableExp)
write_csv(chiTableExp, path = 'chiExp')
write_csv(chiTableExp, path = 'chiExp.csv')
chisq.test(read_csv('chiExp.csv'))
d <- read_csv('chiExp.csv')
c <- chisq.test(d)
c
c$statistic
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
d
c
c$statistic
cc <- c$statistic
cc
class(cc)
chisq.test(d)$statistic
as.numeric(chisq.test(d)$statistic)
runApp('appJosef_new.R')
runApp('appJosef_new.R')
d
read_csv('chiExp.csv')
chiTableExp
write_csv(chiTableExp, 'chiExp.csv')
r <- read_csv('chiExp.csv')
r
row.names(r)
write.csv(chiTableExp, 'chiExp.csv')
read.csv('chiExp.csv')
d <- read.csv('chiExp.csv')
chisq.test(d)
write.csv2(chiTableExp, 'chiExp.csv')
read.csv2('chiExp.csv')
write_csv(chiTableExp, 'chiExp.csv')
chisq.test(read_csv('chiExp.csv'))
runApp('appJosef_new.R')
runApp('appJosef_new.R')
chisq.test(0)
chisq.test(NULL)
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
chisq.test(read_csv('chiExp.csv'))
chisq.test(read_csv('chiExp.csv'))$statistic
as.numeric(chisq.test(read_csv('chiExp.csv'))$statistic)
runApp('appJosef_new.R')
chiData <- reactive({
read_csv(input$input$datapath)
})
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
read_csv('')
read_csv(' ')
read_csv(NULL)
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
valueBox
runApp('appJosef_new.R')
valueBox
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
valueBox
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
valueBox
infoBox
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
infoBox
runApp('appJosef_new.R')
infoBox()
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
infoBox
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
html(infoBox(title = 'test', value = 'test'))
HTML(infoBox(title = 'test', value = 'test'))
runApp('appJosef_new.R')
runApp('appJosef_new.R')
valueBox
infoBox
runApp('appJosef_new.R')
infoBox
runApp('appJosef_new.R')
runApp('appJosef_new.R')
infoBox
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
a <- NULL
if(a == NULL) return(T)
is.null
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
## Only run this example in interactive R sessions
if (interactive()) {
## App 1: Sample usage
shinyApp(
ui = fluidPage(
column(4,
numericInput("x", "Value", 5),
br(),
actionButton("button", "Show")
),
column(8, tableOutput("table"))
),
server = function(input, output) {
# Take an action every time button is pressed;
# here, we just print a message to the console
observeEvent(input$button, {
cat("Showing", input$x, "rows\n")
})
# Take a reactive dependency on input$button, but
# not on any of the stuff inside the function
df <- eventReactive(input$button, {
head(cars, input$x)
})
output$table <- renderTable({
df()
})
}
)
## App 2: Using `once`
shinyApp(
ui = basicPage( actionButton("go", "Go")),
server = function(input, output, session) {
observeEvent(input$go, {
print(paste("This will only be printed once; all",
"subsequent button clicks won't do anything"))
}, once = TRUE)
}
)
## App 3: Using `ignoreInit` and `once`
shinyApp(
ui = basicPage(actionButton("go", "Go")),
server = function(input, output, session) {
observeEvent(input$go, {
insertUI("#go", "afterEnd",
actionButton("dynamic", "click to remove"))
# set up an observer that depends on the dynamic
# input, so that it doesn't run when the input is
# created, and only runs once after that (since
# the side effect is remove the input from the DOM)
observeEvent(input$dynamic, {
removeUI("#dynamic")
}, ignoreInit = TRUE, once = TRUE)
})
}
)
}
## Only run this example in interactive R sessions
if (interactive()) {
## App 1: Sample usage
shinyApp(
ui = fluidPage(
column(4,
numericInput("x", "Value", 5),
br(),
actionButton("button", "Show")
),
column(8, tableOutput("table"))
),
server = function(input, output) {
# Take an action every time button is pressed;
# here, we just print a message to the console
observeEvent(input$button, {
cat("Showing", input$x, "rows\n")
})
# Take a reactive dependency on input$button, but
# not on any of the stuff inside the function
df <- eventReactive(input$button, {
head(cars, input$x)
})
output$table <- renderTable({
df()
})
}
)
}
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
uncorr(chiInput, chiUncor)
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R')
runApp('appJosef_new.R', display.mode = 'showcase')
install.packages('RInno')
require(RInno)
RInno::install_inno()
library(RInno)
install_inno()
install.packages('remotes')
library(remotes)
install_github('ficonsulting/RInno')
library(RInno)
install_inno()
install_inno
getwd()
example_app(app_dir = 'app')
create_app(app_name = 'testCompile', app_dir = 'app')
compile_iss()
library(shiny); runApp('appJosef_new.R')
runApp('appJosef_new.R')
create_app(app_name = 'agreeTest', app_dir = getwd())
compile_iss()
create_app(app_name = 'agreeTest', app_dir = 'app'
)
create_app(app_name = 'agreeTest', app_dir = 'app')
compile_iss()
library(RInno)
getwd()
create_app(app_name = 'agreeTest', app_dir = 'app')
compile_iss()
library(shiny)
runApp()
runApp()
create_app(app_name = 'agreeTest', app_dir = 'app')
compile_iss()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
example_app()
runApp()
create_app(app_name = 'agreeTest', app_dir = 'app')
create_app(app_name = 'agreeTest', app_dir = 'app')
getwd()
compile_iss()
getwd()
create_app(app_name = 'agreeTest')
compile_iss()
getwd()
setwd
setwd("C:/Users/Aureus/Google Drive/1_Psychologie Master/2. Masterarbeit/1_Working Directory")
setwd
getwd()
example_app(app_dir = 'RInnoExample')
create_app('rinnoExample', app_dir = 'RInnoExample')
compile_iss()
getwd()
setwd("C:/Users/Aureus/Google Drive/1_Psychologie Master/2. Masterarbeit/1_Working Directory/app")
getwd()
create_app(app_name = 'agreeTest', pkgs = c('shiny','tidyverse','psych','irr','rel','shinyWidgets','shinyjs','shinydashboard','kableExtra'))
compile_iss()
runApp('C:/Users/Aureus/Google Drive/1_Psychologie Master/2. Masterarbeit/1_Working Directory')
create_app(app_name = 'agreeTest', pkgs = c('shiny','psych','irr','rel','shinyWidgets','shinyjs','shinydashboard','kableExtra'))
create_app(app_name = 'agreeTest', pkgs = c('shiny','psych','irr','rel','shinyWidgets','shinyjs','shinydashboard','kableExtra'))
compile_iss()
getwd()
create_app(app_name = 'agreeTest', pkgs = c('psych','irr','rel','shinyWidgets','shinyjs','shinydashboard','kableExtra'), user_browser = 'firefox')
warnings()
update.packages(ask = F)
